<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Yunqi&#39;s blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-04-11T14:41:25.678Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Yunqi</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>2050热身赛（赶火车）【数学期望】</title>
    <link href="http://yoursite.com/2019/04/11/2050%E7%83%AD%E8%BA%AB%E8%B5%9B%EF%BC%88%E8%B5%B6%E7%81%AB%E8%BD%A6%EF%BC%89%E3%80%90%E6%95%B0%E5%AD%A6%E6%9C%9F%E6%9C%9B%E3%80%91/"/>
    <id>http://yoursite.com/2019/04/11/2050热身赛（赶火车）【数学期望】/</id>
    <published>2019-04-11T14:22:09.000Z</published>
    <updated>2019-04-11T14:41:25.678Z</updated>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;思路&quot;&gt;&lt;a href=&quot;#思路&quot; class=&quot;headerlink&quot; title=&quot;思路&quot;&gt;&lt;/a&gt;思路&lt;/h2&gt;&lt;p&gt;期望就是走这条路的概率*这条路到达的时间，设期望为Ex，则Ex=(a1+a2+…+an+(b1+Ex)+(b2+Ex)+…+(bm+Ex))
      
    
    </summary>
    
      <category term="算法" scheme="http://yoursite.com/categories/%E7%AE%97%E6%B3%95/"/>
    
      <category term="数学期望" scheme="http://yoursite.com/categories/%E7%AE%97%E6%B3%95/%E6%95%B0%E5%AD%A6%E6%9C%9F%E6%9C%9B/"/>
    
    
      <category term="算法" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="数学期望" scheme="http://yoursite.com/tags/%E6%95%B0%E5%AD%A6%E6%9C%9F%E6%9C%9B/"/>
    
  </entry>
  
  <entry>
    <title>天梯赛-特立独行的幸福数（2019年决赛）</title>
    <link href="http://yoursite.com/2019/04/05/%E5%A4%A9%E6%A2%AF%E8%B5%9B-%E7%89%B9%E7%AB%8B%E7%8B%AC%E8%A1%8C%E7%9A%84%E5%B9%B8%E7%A6%8F%E6%95%B0%EF%BC%882019%E5%B9%B4%E5%86%B3%E8%B5%9B%EF%BC%89/"/>
    <id>http://yoursite.com/2019/04/05/天梯赛-特立独行的幸福数（2019年决赛）/</id>
    <published>2019-04-05T14:05:14.000Z</published>
    <updated>2019-04-05T14:17:52.231Z</updated>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;思路&quot;&gt;&lt;a href=&quot;#思路&quot; class=&quot;headerlink&quot; title=&quot;思路&quot;&gt;&lt;/a&gt;思路&lt;/h2&gt;&lt;p&gt;幸福数求法是如果不是幸福数，那么一定会出现循环，一种方法是标记每次得到的数，另一种骚操作是判断20是否会出现（如果出现20，那么这个数就一定
      
    
    </summary>
    
      <category term="天梯赛题解" scheme="http://yoursite.com/categories/%E5%A4%A9%E6%A2%AF%E8%B5%9B%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="天梯赛题解" scheme="http://yoursite.com/tags/%E5%A4%A9%E6%A2%AF%E8%B5%9B%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>天梯赛-深入虎穴（2019年决赛）</title>
    <link href="http://yoursite.com/2019/04/04/%E5%A4%A9%E6%A2%AF%E8%B5%9B-%E6%B7%B1%E5%85%A5%E8%99%8E%E7%A9%B4%EF%BC%882019%E5%B9%B4%E5%86%B3%E8%B5%9B%EF%BC%89/"/>
    <id>http://yoursite.com/2019/04/04/天梯赛-深入虎穴（2019年决赛）/</id>
    <published>2019-04-04T04:20:18.000Z</published>
    <updated>2019-04-04T04:28:04.828Z</updated>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;思路&quot;&gt;&lt;a href=&quot;#思路&quot; class=&quot;headerlink&quot; title=&quot;思路&quot;&gt;&lt;/a&gt;思路&lt;/h2&gt;&lt;p&gt;这是一棵树，但要把无根变为有根，题目中“只有一个出口”的条件便能确定这个树的根，由根去dfs就行了&lt;/p&gt;
&lt;h2 id=&quot;代码&quot;&gt;&lt;a h
      
    
    </summary>
    
      <category term="天梯赛题解" scheme="http://yoursite.com/categories/%E5%A4%A9%E6%A2%AF%E8%B5%9B%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="天梯赛题解" scheme="http://yoursite.com/tags/%E5%A4%A9%E6%A2%AF%E8%B5%9B%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>天梯赛-分而冶之</title>
    <link href="http://yoursite.com/2019/03/26/%E5%A4%A9%E6%A2%AF%E8%B5%9B-%E5%88%86%E8%80%8C%E5%86%B6%E4%B9%8B/"/>
    <id>http://yoursite.com/2019/03/26/天梯赛-分而冶之/</id>
    <published>2019-03-26T07:37:39.000Z</published>
    <updated>2019-03-26T07:40:34.633Z</updated>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;思路&quot;&gt;&lt;a href=&quot;#思路&quot; class=&quot;headerlink&quot; title=&quot;思路&quot;&gt;&lt;/a&gt;思路&lt;/h2&gt;&lt;p&gt;这道题也不难，不用想到什么无向图连通判断，只要对攻下的城市做记录，在跑一遍所有的边，看是否有一条边两个点都没被记录，这样的边就是孤立边&lt;br
      
    
    </summary>
    
      <category term="天梯赛题解" scheme="http://yoursite.com/categories/%E5%A4%A9%E6%A2%AF%E8%B5%9B%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="天梯赛题解" scheme="http://yoursite.com/tags/%E5%A4%A9%E6%A2%AF%E8%B5%9B%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>天梯赛-红色警报</title>
    <link href="http://yoursite.com/2019/03/26/%E5%A4%A9%E6%A2%AF%E8%B5%9B-%E7%BA%A2%E8%89%B2%E8%AD%A6%E6%8A%A5/"/>
    <id>http://yoursite.com/2019/03/26/天梯赛-红色警报/</id>
    <published>2019-03-26T07:25:45.000Z</published>
    <updated>2019-03-26T07:31:51.197Z</updated>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;思路&quot;&gt;&lt;a href=&quot;#思路&quot; class=&quot;headerlink&quot; title=&quot;思路&quot;&gt;&lt;/a&gt;思路&lt;/h2&gt;&lt;p&gt;第一种方法就是暴力，图我发现自己惯用vector来存，其实邻接矩阵也行，然后习惯用广搜，不习惯用深搜。比赛的时候想的巨复杂，其实还是因为自己
      
    
    </summary>
    
      <category term="天梯赛题解" scheme="http://yoursite.com/categories/%E5%A4%A9%E6%A2%AF%E8%B5%9B%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="天梯赛题解" scheme="http://yoursite.com/tags/%E5%A4%A9%E6%A2%AF%E8%B5%9B%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>天梯赛-猜数字</title>
    <link href="http://yoursite.com/2019/03/26/%E5%A4%A9%E6%A2%AF%E8%B5%9B-%E7%8C%9C%E6%95%B0%E5%AD%97/"/>
    <id>http://yoursite.com/2019/03/26/天梯赛-猜数字/</id>
    <published>2019-03-26T07:18:31.000Z</published>
    <updated>2019-03-26T07:25:07.850Z</updated>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;思路&quot;&gt;&lt;a href=&quot;#思路&quot; class=&quot;headerlink&quot; title=&quot;思路&quot;&gt;&lt;/a&gt;思路&lt;/h2&gt;&lt;p&gt;猜数字：其实非常简单，但是就是不知道为啥我没做对，这一次是用的map，比赛用的是结构体，真是绝了。map的lower_bound方法是找出第
      
    
    </summary>
    
      <category term="天梯赛题解" scheme="http://yoursite.com/categories/%E5%A4%A9%E6%A2%AF%E8%B5%9B%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="天梯赛题解" scheme="http://yoursite.com/tags/%E5%A4%A9%E6%A2%AF%E8%B5%9B%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>天梯赛-是否完全二叉搜索树</title>
    <link href="http://yoursite.com/2019/03/26/%E5%A4%A9%E6%A2%AF%E8%B5%9B-%E6%98%AF%E5%90%A6%E5%AE%8C%E5%85%A8%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91/"/>
    <id>http://yoursite.com/2019/03/26/天梯赛-是否完全二叉搜索树/</id>
    <published>2019-03-26T07:15:16.000Z</published>
    <updated>2019-03-26T07:18:11.351Z</updated>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;思路&quot;&gt;&lt;a href=&quot;#思路&quot; class=&quot;headerlink&quot; title=&quot;思路&quot;&gt;&lt;/a&gt;思路&lt;/h2&gt;&lt;p&gt;二叉树的判断，如果是完全，则深度为h的树，除了第h层，其它层都是满的，这里用结构体来存二叉树，同时判断是否为完全。二叉树的空间定义为1&amp;lt
      
    
    </summary>
    
      <category term="天梯赛题解" scheme="http://yoursite.com/categories/%E5%A4%A9%E6%A2%AF%E8%B5%9B%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="天梯赛题解" scheme="http://yoursite.com/tags/%E5%A4%A9%E6%A2%AF%E8%B5%9B%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>天梯赛-愿天下有情人都是兄妹</title>
    <link href="http://yoursite.com/2019/03/26/%E5%A4%A9%E6%A2%AF%E8%B5%9B-%E6%84%BF%E5%A4%A9%E4%B8%8B%E6%9C%89%E6%83%85%E4%BA%BA%E9%83%BD%E6%98%AF%E5%85%84%E5%A6%B9/"/>
    <id>http://yoursite.com/2019/03/26/天梯赛-愿天下有情人都是兄妹/</id>
    <published>2019-03-26T07:08:09.000Z</published>
    <updated>2019-03-26T07:14:49.779Z</updated>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;思路&quot;&gt;&lt;a href=&quot;#思路&quot; class=&quot;headerlink&quot; title=&quot;思路&quot;&gt;&lt;/a&gt;思路&lt;/h2&gt;&lt;p&gt;就是深搜（也是最直接的思路）,结构体存每个人的性别，父母id，如果父母id是-1，就记为0（没有人的id是00000），先搜第一个人的祖先，
      
    
    </summary>
    
      <category term="天梯赛题解" scheme="http://yoursite.com/categories/%E5%A4%A9%E6%A2%AF%E8%B5%9B%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="天梯赛题解" scheme="http://yoursite.com/tags/%E5%A4%A9%E6%A2%AF%E8%B5%9B%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>天梯赛-小字辈</title>
    <link href="http://yoursite.com/2019/03/26/%E5%A4%A9%E6%A2%AF%E8%B5%9B-%E5%B0%8F%E5%AD%97%E8%BE%88/"/>
    <id>http://yoursite.com/2019/03/26/天梯赛-小字辈/</id>
    <published>2019-03-26T06:33:13.000Z</published>
    <updated>2019-03-26T07:05:57.102Z</updated>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;思路&quot;&gt;&lt;a href=&quot;#思路&quot; class=&quot;headerlink&quot; title=&quot;思路&quot;&gt;&lt;/a&gt;思路&lt;/h2&gt;&lt;p&gt;一道深搜题，不过要注意记忆化搜索，用maxx记录最小的那一辈(rank值最大），然后用vector存每一辈的下标，因为是顺序存的，所以输出也
      
    
    </summary>
    
      <category term="天梯赛题解" scheme="http://yoursite.com/categories/%E5%A4%A9%E6%A2%AF%E8%B5%9B%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="天梯赛题解" scheme="http://yoursite.com/tags/%E5%A4%A9%E6%A2%AF%E8%B5%9B%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>天梯赛－名人堂与代金劵</title>
    <link href="http://yoursite.com/2019/03/26/%E5%A4%A9%E6%A2%AF%E8%B5%9B%EF%BC%8D%E5%90%8D%E4%BA%BA%E5%A0%82%E4%B8%8E%E4%BB%A3%E9%87%91%E5%8A%B5/"/>
    <id>http://yoursite.com/2019/03/26/天梯赛－名人堂与代金劵/</id>
    <published>2019-03-26T06:26:17.000Z</published>
    <updated>2019-03-26T06:32:16.622Z</updated>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;思路&quot;&gt;&lt;a href=&quot;#思路&quot; class=&quot;headerlink&quot; title=&quot;思路&quot;&gt;&lt;/a&gt;思路&lt;/h2&gt;&lt;p&gt;很简单很入门级的题，ACMer选手写这种题就是过家家，但是不知道最近我的脑袋是怎么了，这种题都会卡（卡nm?，这个脑子啊……，写个结构体然后
      
    
    </summary>
    
      <category term="天梯赛题解" scheme="http://yoursite.com/categories/%E5%A4%A9%E6%A2%AF%E8%B5%9B%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="天梯赛题解" scheme="http://yoursite.com/tags/%E5%A4%A9%E6%A2%AF%E8%B5%9B%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>天梯赛－列车调度</title>
    <link href="http://yoursite.com/2019/03/25/%E5%A4%A9%E6%A2%AF%E8%B5%9B%EF%BC%8D%E5%88%97%E8%BD%A6%E8%B0%83%E5%BA%A6/"/>
    <id>http://yoursite.com/2019/03/25/天梯赛－列车调度/</id>
    <published>2019-03-25T14:11:16.000Z</published>
    <updated>2019-03-25T14:39:46.297Z</updated>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;思路&quot;&gt;&lt;a href=&quot;#思路&quot; class=&quot;headerlink&quot; title=&quot;思路&quot;&gt;&lt;/a&gt;思路&lt;/h2&gt;&lt;p&gt;这道题就是求递减子列的个数，我的方法是开一个数组来记录当前每个递减子列的尾值，如果要插入的这个数大于所有尾值中最大的那一个，那么ans就+1
      
    
    </summary>
    
      <category term="天梯赛题解" scheme="http://yoursite.com/categories/%E5%A4%A9%E6%A2%AF%E8%B5%9B%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="天梯赛题解" scheme="http://yoursite.com/tags/%E5%A4%A9%E6%A2%AF%E8%B5%9B%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>天梯赛－关于堆的判断</title>
    <link href="http://yoursite.com/2019/03/25/%E5%A4%A9%E6%A2%AF%E8%B5%9B%EF%BC%8D%E5%85%B3%E4%BA%8E%E5%A0%86%E7%9A%84%E5%88%A4%E6%96%AD/"/>
    <id>http://yoursite.com/2019/03/25/天梯赛－关于堆的判断/</id>
    <published>2019-03-25T14:00:31.000Z</published>
    <updated>2019-03-25T14:10:56.945Z</updated>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;思路&quot;&gt;&lt;a href=&quot;#思路&quot; class=&quot;headerlink&quot; title=&quot;思路&quot;&gt;&lt;/a&gt;思路&lt;/h2&gt;&lt;p&gt;堆(Heap)的概念清楚了这道题就不难，按照插入顺序建堆理解起来也不难，用map判断比较快。&lt;/p&gt;
&lt;h2 id=&quot;代码&quot;&gt;&lt;a href
      
    
    </summary>
    
      <category term="天梯赛题解" scheme="http://yoursite.com/categories/%E5%A4%A9%E6%A2%AF%E8%B5%9B%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="天梯赛题解" scheme="http://yoursite.com/tags/%E5%A4%A9%E6%A2%AF%E8%B5%9B%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>天梯赛－倒数第N个字符串</title>
    <link href="http://yoursite.com/2019/03/25/%E5%A4%A9%E6%A2%AF%E8%B5%9B%EF%BC%8D%E5%80%92%E6%95%B0%E7%AC%ACN%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    <id>http://yoursite.com/2019/03/25/天梯赛－倒数第N个字符串/</id>
    <published>2019-03-25T13:24:50.000Z</published>
    <updated>2019-03-25T13:59:42.231Z</updated>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;思路&quot;&gt;&lt;a href=&quot;#思路&quot; class=&quot;headerlink&quot; title=&quot;思路&quot;&gt;&lt;/a&gt;思路&lt;/h2&gt;&lt;p&gt;脑子头脑风暴一下，或者手推，就会发现这道题可以转换为26进制来做（0为a,25为z），倒数第１个字符串是zzz，即zzz-aaa，倒数第二个
      
    
    </summary>
    
      <category term="天梯赛题解" scheme="http://yoursite.com/categories/%E5%A4%A9%E6%A2%AF%E8%B5%9B%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="天梯赛题解" scheme="http://yoursite.com/tags/%E5%A4%A9%E6%A2%AF%E8%B5%9B%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>费马大定理＆＆费马小定理</title>
    <link href="http://yoursite.com/2019/03/09/%E8%B4%B9%E9%A9%AC%E5%A4%A7%E5%AE%9A%E7%90%86%EF%BC%86%EF%BC%86%E8%B4%B9%E9%A9%AC%E5%B0%8F%E5%AE%9A%E7%90%86/"/>
    <id>http://yoursite.com/2019/03/09/费马大定理＆＆费马小定理/</id>
    <published>2019-03-09T03:07:14.000Z</published>
    <updated>2019-03-09T03:07:14.318Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>欧拉函数＆欧拉定理＆欧拉降幂</title>
    <link href="http://yoursite.com/2019/03/09/%E6%AC%A7%E6%8B%89%E5%87%BD%E6%95%B0%EF%BC%86%E6%AC%A7%E6%8B%89%E5%AE%9A%E7%90%86%EF%BC%86%E6%AC%A7%E6%8B%89%E9%99%8D%E5%B9%82/"/>
    <id>http://yoursite.com/2019/03/09/欧拉函数＆欧拉定理＆欧拉降幂/</id>
    <published>2019-03-09T02:16:22.000Z</published>
    <updated>2019-03-25T13:55:15.139Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;上一篇博客我们讲到了快速幂(一般&amp;amp;&amp;amp;矩阵)，现在我们要讲讲一个叫欧拉降幂的东西，为了得到欧拉降幂公式，我们需要回顾一下欧拉函数，再到欧拉定理以及拓展欧拉定理。&lt;/p&gt;
&lt;h2 id=&quot;欧拉函数&quot;&gt;&lt;a href=&quot;#欧拉函数&quot; class=&quot;headerlink&quot; title=&quot;欧拉函数&quot;&gt;&lt;/a&gt;欧拉函数&lt;/h2&gt;&lt;h3 id=&quot;公式&quot;&gt;&lt;a href=&quot;#公式&quot; class=&quot;headerlink&quot; title=&quot;公式&quot;&gt;&lt;/a&gt;公式&lt;/h3&gt;&lt;p&gt;欧拉函数phi[x],表示[1,x-1]区间中与x互质的数的个数&lt;br&gt;phi[x]=x&lt;em&gt;(1-1/a1)&lt;/em&gt;(1-1/a2)…&lt;em&gt;(1-1/an)，其中ai是x的质因数&lt;br&gt;那么就可以得到欧拉函数的一个性质，若p是质数，那么phi[p]=p-1(这一条有时会用到)&lt;br&gt;以及phi[i&lt;/em&gt;p]=p&lt;em&gt;phi&lt;a href=&quot;i%p==0&quot;&gt;i&lt;/a&gt;，phi[i&lt;/em&gt;p]=(p-1)*phi&lt;a href=&quot;i%p!=0&quot;&gt;i&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;怎么求&quot;&gt;&lt;a href=&quot;#怎么求&quot; class=&quot;headerlink&quot; title=&quot;怎么求&quot;&gt;&lt;/a&gt;怎么求&lt;/h3&gt;&lt;p&gt;我们可以用线性筛筛出所有的欧拉函数，首先用线性筛找出[1,n]之间所有的素数，然后根据公式算出欧拉函数值&lt;br&gt;下面是线性筛代码&lt;/p&gt;
    
    </summary>
    
      <category term="算法" scheme="http://yoursite.com/categories/%E7%AE%97%E6%B3%95/"/>
    
      <category term="欧拉函数" scheme="http://yoursite.com/categories/%E7%AE%97%E6%B3%95/%E6%AC%A7%E6%8B%89%E5%87%BD%E6%95%B0/"/>
    
    
      <category term="欧拉函数" scheme="http://yoursite.com/tags/%E6%AC%A7%E6%8B%89%E5%87%BD%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>快速幂（一般＆＆矩阵）</title>
    <link href="http://yoursite.com/2019/03/08/%E5%BF%AB%E9%80%9F%E5%B9%82%EF%BC%88%E4%B8%80%E8%88%AC%EF%BC%86%EF%BC%86%E7%9F%A9%E9%98%B5%EF%BC%89/"/>
    <id>http://yoursite.com/2019/03/08/快速幂（一般＆＆矩阵）/</id>
    <published>2019-03-08T15:43:02.000Z</published>
    <updated>2019-03-25T13:55:29.502Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;其实整个系列弄下来是因为尝试做了小米OJ的二月月赛，结果被狠狠压在地上打(哭，看了评论有人给出的题解，有道题因为涉及到矩阵快速幂，所以干脆把快速幂重新再看一遍。&lt;/p&gt;
&lt;h2 id=&quot;原理&quot;&gt;&lt;a href=&quot;#原理&quot; class=&quot;headerlink&quot; title=&quot;原理&quot;&gt;&lt;/a&gt;原理&lt;/h2&gt;&lt;p&gt;一般朴素的幂积算法计算$a^b$时间复杂度是O(n)，而快速幂可以降到O(logn)，实现的原理是将b二进制化，$b=2^a_{1}+2^a_{2}+…+2^a_{k}$ , $a^b=a^｛2^a_{1}｝&lt;em&gt;a^｛2^a_{2}｝…&lt;/em&gt;a^｛2^a_{k}｝$。&lt;br&gt;这些a_{i}就是b的二进制为１的位数(末位取０，从低到高依次增1)，下面是具体实现代码&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;qpow&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; a, &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; b)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; ret = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (b != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (b &amp;amp; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ret *= a;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        a *= a;    &lt;span class=&quot;comment&quot;&gt;//累乘，以便随时对ret做出贡献&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        b &amp;gt;&amp;gt;= &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; ret;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="算法" scheme="http://yoursite.com/categories/%E7%AE%97%E6%B3%95/"/>
    
      <category term="快速幂" scheme="http://yoursite.com/categories/%E7%AE%97%E6%B3%95/%E5%BF%AB%E9%80%9F%E5%B9%82/"/>
    
    
      <category term="快速幂" scheme="http://yoursite.com/tags/%E5%BF%AB%E9%80%9F%E5%B9%82/"/>
    
  </entry>
  
  <entry>
    <title>【图论】求无向连通图的割点（Tarjan算法）</title>
    <link href="http://yoursite.com/2019/01/24/%E3%80%90%E5%9B%BE%E8%AE%BA%E3%80%91%E6%B1%82%E6%97%A0%E5%90%91%E8%BF%9E%E9%80%9A%E5%9B%BE%E7%9A%84%E5%89%B2%E7%82%B9%EF%BC%88Tarjan%E7%AE%97%E6%B3%95%EF%BC%89/"/>
    <id>http://yoursite.com/2019/01/24/【图论】求无向连通图的割点（Tarjan算法）/</id>
    <published>2019-01-24T07:16:42.000Z</published>
    <updated>2019-03-25T13:35:59.316Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;寒假训练开始了，发现自己真是半灌水响叮当，自己关于割点的概念完全不知道，后来找了几篇不错的博客以及翻了翻白书，白书很适合理解概念，博客给的模板代码适合借鉴。&lt;/p&gt;
&lt;h2 id=&quot;割点的概念&quot;&gt;&lt;a href=&quot;#割点的概念&quot; class=&quot;headerlink&quot; title=&quot;割点的概念&quot;&gt;&lt;/a&gt;割点的概念&lt;/h2&gt;&lt;p&gt;在&lt;strong&gt;无向连通图&lt;/strong&gt;中，如果将其中一个点以及这个点所连的所有的边都去掉，图不再连通，那么这个点成为&lt;strong&gt;割点&lt;/strong&gt;（割顶/关节点）。&lt;/p&gt;
&lt;h2 id=&quot;如何求割点&quot;&gt;&lt;a href=&quot;#如何求割点&quot; class=&quot;headerlink&quot; title=&quot;如何求割点&quot;&gt;&lt;/a&gt;如何求割点&lt;/h2&gt;&lt;p&gt;暴力的方法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;依次删除每一个节点v&lt;/li&gt;
&lt;li&gt;DFS(BFS)判断是否连通&lt;/li&gt;
&lt;li&gt;再把节点v加入图中&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;若用邻接表，需要做V次DFS，时间复杂度为O(V*(V+E))。&lt;/p&gt;
    
    </summary>
    
      <category term="算法" scheme="http://yoursite.com/categories/%E7%AE%97%E6%B3%95/"/>
    
      <category term="图论" scheme="http://yoursite.com/categories/%E7%AE%97%E6%B3%95/%E5%9B%BE%E8%AE%BA/"/>
    
    
      <category term="图论" scheme="http://yoursite.com/tags/%E5%9B%BE%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title>树状数组</title>
    <link href="http://yoursite.com/2018/10/16/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/"/>
    <id>http://yoursite.com/2018/10/16/树状数组/</id>
    <published>2018-10-16T01:55:22.000Z</published>
    <updated>2019-03-25T13:35:21.646Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;树状数组不太熟悉，所以下决心写出个教程来，断断续续花了三天（可太断断续续了），听说OI选手最喜欢写树状数组（线段树）了&lt;/p&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;我们将一个数组a[]树状化，每个节点的值C[i]记录了其叶子节点的权值之和，那么树状数组C[]就维护了这个数组a[]的前缀和S[i]=a[1]+a[2]+…+a[i],树状数组利用了二进制，使其可以在O(logn)时间内对这个数组a[]进行修改和求和（与O(n)比起来效率很高）&lt;/p&gt;
&lt;p&gt;树状数组可以实现的功能有&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;将一个数组树状化&lt;/li&gt;
&lt;li&gt;区间修改，如改变某一个点a[i]的值&lt;/li&gt;
&lt;li&gt;区间查询，如询问a[1]+a[2]+…+a[i]的值&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="算法" scheme="http://yoursite.com/categories/%E7%AE%97%E6%B3%95/"/>
    
      <category term="树状数组" scheme="http://yoursite.com/categories/%E7%AE%97%E6%B3%95/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/"/>
    
    
      <category term="树状数组" scheme="http://yoursite.com/tags/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/"/>
    
  </entry>
  
  <entry>
    <title>Git操作总结(一)</title>
    <link href="http://yoursite.com/2018/10/10/Git%E6%93%8D%E4%BD%9C%E6%80%BB%E7%BB%93/"/>
    <id>http://yoursite.com/2018/10/10/Git操作总结/</id>
    <published>2018-10-10T14:49:34.000Z</published>
    <updated>2018-10-16T10:32:35.704Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;经久没有使用git（捂脸跑开），今天开会被czq小朋友教做人，所以欸真的需要再回顾一下git操作啊&lt;em&gt;(:зゝ∠)&lt;/em&gt;。于是上&lt;a href=&quot;https://git-scm.com/book/en/v2&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;git官网&lt;/a&gt;从头到尾仔仔细细看了一波（不能再废下去了啊喂（摇醒）。也相当于给自己做一个git笔记，以后有忘记的命令操作就来这里看啦。&lt;/p&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;Git是一种&lt;strong&gt;分布式版本控制系统&lt;/strong&gt;，这与常被混淆的&lt;strong&gt;Github&lt;/strong&gt;(只支持Git做版本控制的项目托管平台)是两种不同的概念。在Git中的绝大多数操作都只需要访问本地文件和资源，Git和其他版本控制系统的主要差别在于对待数据的方法，其他大部分系统以文件变更列表的方式存储信息，而Git更像是把数据看作是一组快照，每次提交修改和更新时对这个文件制作一个快照并保存这个快照的索引(其中以文件内容的哈希值来作为索引)。&lt;/p&gt;
&lt;p&gt;由于git的使用非常灵活，在实践过程中便衍生出很多种不同的工作流程和协作方式。Git有多种使用方式，强烈建议使用命令行模式。Git安装跳过，请自行使用强大的搜索引擎。&lt;/p&gt;
    
    </summary>
    
      <category term="Git" scheme="http://yoursite.com/categories/Git/"/>
    
    
      <category term="Git" scheme="http://yoursite.com/tags/Git/"/>
    
  </entry>
  
</feed>
